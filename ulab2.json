{
	"info": {
		"_postman_id": "250f42c1-9dd9-485a-b0ba-dfada1f86639",
		"name": "ULab2",
		"description": "Grocery Store\n\n[https://github.com/vdespa/Postman-Complete-Guide-API-Testing/blob/main/simple-grocery-store-api.md](https://github.com/vdespa/Postman-Complete-Guide-API-Testing/blob/main/simple-grocery-store-api.md)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "877315"
	},
	"item": [
		{
			"name": "Grocery Store",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code', function(){\r",
							"    pm.response.to.have.status(100)\r",
							"})\r",
							"\r",
							"// Get the environment name\r",
							"const environmentName = pm.environment.name;\r",
							"\r",
							"if (environmentName === 'Firstuo_AX') {\r",
							"    // Perform actions specific to the Production environment\r",
							"} else if (environmentName === 'Firstuo_UAT') {\r",
							"    // Perform actions specific to the Staging environment\r",
							"} else {\r",
							"    // Perform actions for other environments\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"ztac\":3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/:productId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						":productId"
					],
					"variable": [
						{
							"key": "productId",
							"value": "4643"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code', function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/products?category=coffee",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products"
					],
					"query": [
						{
							"key": "category",
							"value": "coffee"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code', function(){\r",
							"    pm.response.to.have.status(201)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/carts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"carts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code', function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/carts/:cartId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"carts",
						":cartId"
					],
					"variable": [
						{
							"key": "cartId",
							"value": "sERlGEL33m2hakWYGSlpU"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a cart items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code', function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/carts/:cartId/items",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"carts",
						":cartId",
						"items"
					],
					"variable": [
						{
							"key": "cartId",
							"value": "sERlGEL33m2hakWYGSlpU"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add an item already added to a cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400', function(){\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Error messag for product already added\", function () {\r",
							"    pm.response.to.have.body( '{\"error\": \"This product has already been added to cart.\"}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"productId\":4643,\r\n    \"quantiy\":5\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/carts/:cartId/items",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"carts",
						":cartId",
						"items"
					],
					"variable": [
						{
							"key": "cartId",
							"value": "sERlGEL33m2hakWYGSlpU"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}